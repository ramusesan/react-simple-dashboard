{"version":3,"sources":["components/Layout/FormLayout.js","components/common/PopUp.js","components/auth/Signup.js","components/utils/user.js","components/dashboard/SideNav.js","components/common/Header.js","components/common/Footer.js","components/utils/constants.js","components/Charts/GeoChart.js","components/Charts/NumberRangeChart.js","components/Charts/ComboChart.js","components/Charts/PieChart.js","components/Charts/DateRangeFilterChart.js","components/Charts/TableChart.js","assets/spinner.gif","components/common/Spinner.js","components/dashboard/index.js","components/auth/Login.js","components/auth/ResetPassword.js","components/dashboard/Settings.js","components/dashboard/UserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["FormLayout","className","onSubmit","this","props","autoComplete","formName","children","Component","PopUp","id","onClick","closeModel","msg","Signup","onSignUp","event","preventDefault","console","log","state","userName","setState","errorMsg","emailId","password","confirmPassword","checkUserExistInDb","userList","JSON","parse","localStorage","getItem","userInDb","forEach","user","index","push","length","email","role","setItem","stringify","toggleModel","prevState","popUpMsg","showPopupModel","signupSuccess","type","value","target","trim","toLowerCase","to","clodeModel","name","placeholder","onChange","onChangeInput","bind","getUserData","SidebarExample","containerClass","showMenu","USER","style","listStyleType","padding","gotoDashboard","gotoSettings","gotoUserProfile","onLogout","React","Header","onToggleNavMenu","showNavMenu","logout","dashboard","userProfile","settings","sessionUser","Footer","FAKE_JSON","require","geoChart","numberRangeChart","comboChart","pieChart","dateRangeFilterChart","tableChart","chartLists","updatedChartList","label","checked","compontList","component","width","height","chartType","data","mapsApiKey","rootProps","loader","chartPackages","controls","controlType","options","filterColumnIndex","matchType","ui","title","vAxis","hAxis","seriesType","series","5","is3D","filterColumnLabel","format","pattern","showRowNumber","Spinner","noBg","backdrop","background","src","spinner","alt","Dashboard","renderCharts","charts","some","item","map","list","createElement","toString","href","showSpinner","setTimeout","Login","e","rememberMe","doLogin","userExist","filter","loginSucces","ResetPassword","resetPassword","emaild","sentResetCode","margin","left","top","fontSize","marginTop","marginLeft","updatedChartLists","Settings","handleSubmit","openModel","myList","itemIndex","findIndex","graph","chart","handleChange","Profile","App","exact","path","Main","UserProfile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a391da4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../styles/main.css\";\r\n\r\nclass FormLayout extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        {\" \"}\r\n        <div className=\" auth-container\">\r\n          <form onSubmit={this.props.onSubmit} autoComplete=\"off\">\r\n            <fieldset>\r\n              <legend>{this.props.formName} </legend>\r\n              {this.props.children}\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormLayout;\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/popup.css\";\r\n\r\nexport default class PopUp extends Component {\r\n  render() {\r\n    return (\r\n      <section id=\"model-container\">\r\n        <div id=\"backdrop\" onClick={this.props.closeModel}></div>\r\n        <div id=\"msg-container\">\r\n          <p>{this.props.msg}</p>\r\n          <div>\r\n            <button id=\"model-close__button\" className=\"submit-button\" onClick={this.props.closeModel}>OK</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport PopUp from \"../common/PopUp\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      emailId: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errorMsg: \"\",\r\n      signupSuccess: false,\r\n      popUpMsg: \"\",\r\n      showPopupModel: false,\r\n    };\r\n  }\r\n\r\n  onChangeInput(type, event) {\r\n    const value = event.target.value.trim().toLowerCase();\r\n    if (type === \"username\") {\r\n      this.setState({ userName: value });\r\n    } else if (type === \"email\") {\r\n      this.setState({ emailId: value });\r\n    } else if (type === \"password\") {\r\n      this.setState({ password: value });\r\n    } else if (type === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: value });\r\n    }\r\n\r\n    if (this.state.errorMsg !== \"\") {\r\n      this.setState({ errorMsg: \"\" });\r\n    }\r\n  }\r\n\r\n  onSignUp = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    if (this.state.userName === \"\") {\r\n      this.setState({ errorMsg: \"Please enter username\" });\r\n    } else if (this.state.emailId === \"\") {\r\n      this.setState({ errorMsg: \"Please enter email Id\" });\r\n    } else if (\r\n      this.state.password === \"\" ||\r\n      this.state.confirmPassword === \"\"\r\n    ) {\r\n      this.setState({\r\n        errorMsg: \"Please enter both password and confirm password\",\r\n      });\r\n    } else if (this.state.password !== this.state.confirmPassword) {\r\n      this.setState({ errorMsg: \"Password Not matching\" });\r\n    } else {\r\n      this.checkUserExistInDb();\r\n    }\r\n  };\r\n\r\n  checkUserExistInDb = () => {\r\n    let userList = JSON.parse(localStorage.getItem(\"users\"));\r\n    let userInDb = [];\r\n    userList.forEach((user, index) => {\r\n      if (user.userName === this.state.userName) {\r\n        this.setState({ errorMsg: \"This user name is already registered\" });\r\n        userInDb.push(user);\r\n      } else if (user.emailId === this.state.emailId) {\r\n        this.setState({ errorMsg: \"This emaild id  is registered.\" });\r\n        userInDb.push(user);\r\n      }\r\n    });\r\n    if (userInDb.length === 0) {\r\n      userList.push({\r\n        email: this.state.emailId,\r\n        password: this.state.password,\r\n        role: \"user\",\r\n        userName: this.state.userName,\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(userList));\r\n\r\n      this.toggleModel(true);\r\n    }\r\n  };\r\n\r\n  toggleModel = (redirect = false) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        popUpMsg: \"\",\r\n        showPopupModel: !prevState.showPopupModel,\r\n        signupSuccess: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { userName, emailId, password, confirmPassword, signupSuccess } =\r\n      this.state;\r\n    if (signupSuccess) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <FormLayout formName=\"Sign Up\" onSubmit={this.onSignUp}>\r\n        {this.state.showPopupModel ? (\r\n          <PopUp msg={this.state.popUpMsg} closeModel={this.clodeModel} />\r\n        ) : null}\r\n\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"User Name\"\r\n            value={userName}\r\n            onChange={this.onChangeInput.bind(this, \"username\")}\r\n          />\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={emailId}\r\n            onChange={this.onChangeInput.bind(this, \"email\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={this.onChangeInput.bind(this, \"password\")}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={this.onChangeInput.bind(this, \"confirmPassword\")}\r\n          />\r\n        </div>\r\n        {this.state.errorMsg.length > 0 ? (\r\n          <p className=\"auth-error-msg\">{this.state.errorMsg}</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <br />\r\n        <input type=\"submit\" value=\"  Sign Up\" className=\"auth-button\" />\r\n\r\n        <div>\r\n          Already have an account? <Link to=\"/\">Log In</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","export const getUserData= () =>{\r\n    return JSON.parse(localStorage.getItem('currentUser')) || {}\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { getUserData } from \"../utils/user\";\r\n\r\nexport default class SidebarExample extends React.Component {\r\n  render() {\r\n    const showMenu = this.props.showMenu;\r\n    const containerClass = showMenu ? \"show-nav-menu\" : \"hide-nav-menu\";\r\n    const USER = getUserData();\r\n\r\n    return (\r\n      <Router>\r\n        <div id=\"nav-container\" className={containerClass}>\r\n          <ul id=\"nav-links\" style={{ listStyleType: \"none\", padding: 0 }}>\r\n            <li>\r\n              <Link to=\"/dashboard\" onClick={this.props.gotoDashboard}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            {USER.role === \"admin\" ? (\r\n              <li>\r\n                <Link to=\"/settings\" onClick={this.props.gotoSettings}>\r\n                  Settings\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <li>\r\n              <Link to=\"/userprofile\" onClick={this.props.gotoUserProfile}>\r\n                Profile\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <hr />\r\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n            <li onClick={this.onLogout}>Logout</li>\r\n          </ul>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SideNav from \"../dashboard/SideNav\";\r\nimport { getUserData } from \"../utils/user\";\r\nimport \"../../styles/header.css\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNavMenu: false,\r\n      logout: false,\r\n      dashboard: false,\r\n      userProfile: false,\r\n      settings: false,\r\n    };\r\n  }\r\n\r\n  onToggleNavMenu = () => {\r\n    this.setState((prevState) => {\r\n      return { showNavMenu: !prevState.showNavMenu };\r\n    });\r\n  };\r\n\r\n  onLogout = () => {\r\n    this.setState({ logout: true });\r\n  };\r\n\r\n  gotoDashboard = () => {\r\n    this.setState({ dashboard: true });\r\n  };\r\n\r\n  gotoUserProfile = () => {\r\n    this.setState({ userProfile: true });\r\n  };\r\n\r\n  gotoSettings = () => {\r\n    this.setState({ settings: true });\r\n  };\r\n\r\n  render() {\r\n    const { logout, userProfile, settings, dashboard } = this.state;\r\n\r\n    const sessionUser = getUserData();\r\n    console.log(\"sessionUser\", sessionUser);\r\n    if (logout) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (dashboard) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    if (userProfile) {\r\n      return <Redirect to=\"/userprofile\" />;\r\n    }\r\n\r\n    if (settings) {\r\n      return <Redirect to=\"/settings\" />;\r\n    }\r\n    return (\r\n      <section>\r\n        <div id=\"header-container\">\r\n          <span id=\"menu-icon\" onClick={this.onToggleNavMenu}>\r\n            {\" \"}\r\n          </span>\r\n          <span id=\"greet-user\"> Welcome {sessionUser.userName || null } </span>\r\n          <span id=\"logout-icon\" onClick={this.onLogout}></span>\r\n        </div>\r\n        <SideNav\r\n          showMenu={this.state.showNavMenu}\r\n          gotoUserProfile={this.gotoUserProfile}\r\n          gotoSettings={this.gotoSettings}\r\n          gotoDashboard={this.gotoDashboard}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"../../styles/footer.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div id=\"footer-container\">\r\n            All rights reserved \r\n        </div>\r\n    )\r\n}\r\n","import BarChart from \"../Charts/BarChart\";\r\nimport PieChart from \"../Charts/PieChart\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport NumberRangeChart from \"../Charts/NumberRangeChart\";\r\nimport GeoChart from \"../Charts/GeoChart\";\r\nimport ComboChart from \"../Charts/ComboChart\";\r\nimport DateRangeFilterChart from \"../Charts/DateRangeFilterChart\";\r\nimport TimeLineChart from \"../Charts/TimeLineChart\";\r\nimport TableChart from \"../Charts/TableChart\";\r\n\r\nconst FAKE_JSON = require(\"../../db/charts.json\")\r\nconst {\r\n  geoChart,\r\n  numberRangeChart,\r\n  comboChart,\r\n  pieChart,\r\n  dateRangeFilterChart,\r\n  tableChart,\r\n} = JSON.parse(JSON.stringify(FAKE_JSON));\r\n\r\nexport const RouterList = [\r\n  {\r\n    path: \"/dashboard\",\r\n    main: () => <h2>User Profile</h2>,\r\n  },\r\n  {\r\n    path: \"/setting\",\r\n    main: () => <h2>Settings</h2>,\r\n  },\r\n];\r\n\r\nexport const chartLists = () => {\r\n  const updatedChartList = JSON.parse(localStorage.getItem(\"chartsList\"));\r\n  if (updatedChartList && updatedChartList.length > 0) {\r\n    return updatedChartList;\r\n  }\r\n\r\n  return [\r\n    {\r\n      name: \"geoChart\",\r\n      label: \"Geo Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"numberRangeChart\",\r\n      label: \"NumberRange Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"comboChart\",\r\n      label: \"Combo Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"pieChart\",\r\n      label: \"Pie Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"dateRangeFilterChart\",\r\n      label: \"DateRange Filter Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"tableChart\",\r\n      label: \"Table Chart\",\r\n      checked: true,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const compontList = {\r\n  geoChart: { component: GeoChart, data: geoChart },\r\n  numberRangeChart: { component: NumberRangeChart, data: numberRangeChart },\r\n  comboChart: { component: ComboChart, data: comboChart},\r\n  pieChart: { component: PieChart, data: pieChart},\r\n  dateRangeFilterChart: { component: DateRangeFilterChart, data: dateRangeFilterChart },\r\n  tableChart: { component: TableChart, data: tableChart },\r\n};\r\n","import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function GeoChard(props) {\r\n  console.log(\"DATA\",  props)\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"700px\"}\r\n        height={\"300px\"}\r\n        chartType=\"GeoChart\"\r\n        data={props.data}\r\n        // Note: you will need to get a mapsApiKey for your project.\r\n        // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n        mapsApiKey=\"YOUR_KEY_HERE\"\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function NumberRangeChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n       className=\"chart-list\"\r\n       width={\"470px\"}\r\n       height={\"270px\"}\r\n        chartType=\"BarChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        rootProps={{ \"data-testid\": \"6\" }}\r\n        chartPackages={[\"corechart\", \"controls\"]}\r\n        controls={[\r\n          {\r\n            controlType: \"StringFilter\",\r\n            options: {\r\n              filterColumnIndex: 0,\r\n              matchType: \"any\", // 'prefix' | 'exact',\r\n              ui: {\r\n                label: \"Search by name\",\r\n              },\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function ComboChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"650px\"}\r\n        height={\"300px\"}\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          title: \"Monthly Coffee Production by Country\",\r\n          vAxis: { title: \"Cups\" },\r\n          hAxis: { title: \"Month\" },\r\n          seriesType: \"bars\",\r\n          series: { 5: { type: \"line\" } },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function PieChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        className=\"chart-list\"\r\n        width={\"500px\"}\r\n        height={\"300px\"}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          title: \"My Daily Activities\",\r\n          // Just add this option\r\n          is3D: true,\r\n        }}\r\n        rootProps={{ \"data-testid\": \"2\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function DateRangeFilterChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"600px\"}\r\n        height={\"400px\"}\r\n        chartType=\"Table\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n        chartPackages={[\"corechart\", \"controls\"]}\r\n        controls={[\r\n          {\r\n            controlType: \"DateRangeFilter\",\r\n            options: {\r\n              filterColumnLabel: \"Year\",\r\n              ui: { format: { pattern: \"yyyy\" } },\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function TableChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"100%\"}\r\n        height={\"300px\"}\r\n        chartType=\"Table\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          showRowNumber: true,\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner.1baf7e2b.gif\";","import React from \"react\";\r\nimport \"../../styles/common.css\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\n\r\nexport default function Spinner(props) {\r\n  const {backdrop} = props.backdrop || false;\r\n  const noBg = backdrop ? \"\" : \"transparent\";\r\n  return (\r\n    <div id=\"spinner-container\">\r\n      <div id=\"spinner-backdrop\" style={{ background: `${noBg}` }}>\r\n        <div id=\"spinner-section\">\r\n          <img src={spinner} alt=\"spinner\" id=\"spinner-icon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport Footer from \"../common/Footer\";\r\nimport { chartLists, compontList } from \"../utils/constants\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport \"../../styles/main.css\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSpinner: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ showSpinner: false });\r\n    }, 1000);\r\n  }\r\n  renderCharts = () => {\r\n    const charts = chartLists();\r\n\r\n    const anythingToVisible = charts.some((item) => item.checked === true);\r\n\r\n    if (!anythingToVisible || charts.length === 0) {\r\n      return (\r\n        <div id=\"no-chart__msg\">\r\n          <h5>Please contact Admin </h5>\r\n          <p>\r\n            <a href=\"mailto: admin@xyz.com\">admin@xyz.com</a>{\" \"}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return charts.map((list, index) => {\r\n      if (list.checked) {\r\n        return (\r\n          <div className=\"chart-item\" key={index.toString()}>\r\n            {React.createElement(\r\n              compontList[list.name].component,\r\n              compontList[list.name].data\r\n            )}\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        {this.state.showSpinner ? (\r\n          <Spinner />\r\n        ) : (\r\n          <section className=\"chart-container\">{this.renderCharts()}</section>\r\n        )}\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport \"../../styles/login.css\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginSucces: false,\r\n      userName: \"\",\r\n      password: \"\",\r\n      errorMsg: \"\",\r\n      rememberMe: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const adminData = [\r\n      {\r\n        email: \"admin@gmail.com\",\r\n        role: \"admin\",\r\n        userName: \"admin\",\r\n        password: \"admin\",\r\n      },\r\n    ];\r\n    localStorage.setItem(\"users\", JSON.stringify(adminData));\r\n    this.setState({\r\n      userName: localStorage.getItem(\"rememberUser\"),\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  onChangeInput = (type, e) => {\r\n    if (type === \"userName\") {\r\n      this.setState({ userName: e.target.value, errorMsg: \"\" });\r\n    }\r\n    if (type === \"password\") {\r\n      this.setState({ password: e.target.value, errorMsg: \"\" });\r\n    }\r\n    if (type === \"rememberMe\") {\r\n      this.setState({ rememberMe: e.target.checked });\r\n    }\r\n  };\r\n\r\n  doLogin = (event) => {\r\n    event.preventDefault();\r\n    // Check whether user exists in DB with API or not\r\n    const dbUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n    const userExist = dbUsers.filter((user, index) => {\r\n      if (\r\n        (user.userName === this.state.userName ||\r\n          user.email === this.state.userName) &&\r\n        user.password === this.state.password\r\n      ) {\r\n        return user;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    if (userExist[0]) {\r\n      this.setState({ loginSucces: true });\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(userExist[0]));\r\n      if (this.state.rememberMe) {\r\n        localStorage.setItem(\"rememberUser\", this.state.userName);\r\n      }\r\n    } else {\r\n      this.setState({ errorMsg: \"incorrect credentails\" });\r\n      localStorage.setItem(\"rememberUser\", \"\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userName, password } = this.state;\r\n\r\n    if (this.state.loginSucces) {\r\n      return <Redirect to=\"/dashboard\" push />;\r\n    }\r\n    return (\r\n      <FormLayout formName=\"Login\" onSubmit={this.doLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"üsername\"\r\n          placeholder=\"User Name\"\r\n          value={userName}\r\n          onChange={this.onChangeInput.bind(this, \"userName\")}\r\n        />{\" \"}\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={this.onChangeInput.bind(this, \"password\")}\r\n        />{\" \"}\r\n        {this.state.errorMsg.length > 0 ? (\r\n          <p className=\"auth-error-msg\"> {this.state.errorMsg} </p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.onChangeInput.bind(this, \"rememberMe\")}\r\n          />\r\n          <label>Remember Me</label>\r\n        </div>\r\n        <input type=\"submit\" className=\"auth-button\" value=\"Login\" />\r\n        <div>\r\n          <Link to=\"/resetPassword\">Forgot Password </Link> <br />\r\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emaild: \"\",\r\n      errorMsg: \"\",\r\n      sentResetCode: false,\r\n    };\r\n  }\r\n  onChangeInput(type, e) {\r\n    if (type === \"email\") {\r\n      this.setState({ emaild: e.target.value });\r\n    }\r\n  }\r\n  resetPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { emaild, errorMsg, sentResetCode } = this.state;\r\n    return (\r\n      <FormLayout formName=\"Reset Password\" onSubmit={this.resetPassword}>\r\n        <div>\r\n          {\" \"}\r\n          {!sentResetCode ? (\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={emaild}\r\n              onChange={this.onChangeInput.bind(this, \"email\")}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              name=\"resetcode\"\r\n              placeholder=\"Enter Reset Code\"\r\n              value={emaild}\r\n              onChange={this.onChangeInput.bind(this, \"email\")}\r\n            />\r\n          )}\r\n          <br />\r\n        </div>\r\n        <div>\r\n          {sentResetCode ? (\r\n            <input\r\n              type=\"submit\"\r\n              className=\"auth-button\"\r\n              style={{ margin: \"auto\", left: \"18px\", top: \"5px\" }}\r\n              value=\"Reset Password\"\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"submit\"\r\n              className=\"auth-button\"\r\n              style={{ margin: \"auto\", left: \"18px\", top: \"5px\" }}\r\n              value=\"  Send Reset Code\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ fontSize: \"12px\", marginTop: \"10px\", marginLeft: \"5px\" }}>\r\n          Goto login page <Link to=\"/\">Log In</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport \"../../styles/settings.css\";\r\nimport { chartLists } from \"../utils/constants\";\r\nimport PopUp from \"../common/PopUp\";\r\n\r\nvar updatedChartLists = chartLists();\r\n\r\nexport default class Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openModel: false,\r\n      charts: updatedChartLists,\r\n    };\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    localStorage.setItem(\"chartsList\", JSON.stringify(this.state.charts));\r\n    this.toggleModel();\r\n  };\r\n\r\n  toggleModel = () => {\r\n    this.setState((prevState) => {\r\n      return { openModel: !prevState.openModel };\r\n    });\r\n  };\r\n\r\n  handleChange(type, event) {\r\n    var myList = [...this.state.charts];\r\n    const itemIndex = myList.findIndex((graph) => graph.name === type);\r\n\r\n    myList[itemIndex].checked = !myList[itemIndex].checked;\r\n\r\n    this.setState((prevState) => {\r\n      return { graph: myList };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <section id=\"settings-container\">\r\n          <div id=\"settings-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <table>\r\n                {this.state.charts.map((chart, index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>\r\n                        <label>{chart.label}</label>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={chart.checked}\r\n                          name={chart.name}\r\n                          onClick={this.handleChange.bind(this, chart.name)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </table>\r\n\r\n              <input\r\n                className=\"submit-button\"\r\n                id=\"setting-button\"\r\n                type=\"submit\"\r\n                value=\"Update\"\r\n              />\r\n            </form>\r\n          </div>\r\n          {this.state.openModel ? (\r\n            <PopUp msg=\"Updated successfully\" closeModel={this.toggleModel} />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport \"../../styles/profile.css\";\r\nimport { getUserData } from \"../utils/user\";\r\n\r\nexport default function Profile() {\r\n  const USER = getUserData();\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <section id=\"user-profile-main\">\r\n        <div id=\"user-profile-container\">\r\n          <div id=\"user-avator-section\">\r\n            <div id=\"user-avatar\" />\r\n          </div>\r\n          <div id=\"user-details\">\r\n            <div id=\"details\">\r\n              <label>\r\n                {\" \"}\r\n                <b>User Name : </b>\r\n                {USER.userName}\r\n              </label>{\" \"}\r\n              <br />\r\n              <label>\r\n                {\" \"}\r\n                <b>Email Id :</b> {USER.email}\r\n              </label>{\" \"}\r\n              <br />\r\n              <label>\r\n                <b> Your Role: </b>\r\n                {USER.role}\r\n              </label>{\" \"}\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./components/auth/Signup\";\nimport Dashboard from \"./components/dashboard\";\nimport Main from \"./components/auth/Login\";\nimport ResetPassword from \"./components/auth/ResetPassword\";\nimport Settings from \"./components/dashboard/Settings\";\nimport UserProfile from \"./components/dashboard/UserProfile\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/resetPassword\" component={ResetPassword} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/userprofile\" component={UserProfile} />\n          <Route path=\"*\" component={() => <h1>Page not found</h1>} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}