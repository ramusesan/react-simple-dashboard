{"version":3,"sources":["components/Layout/FormLayout.js","components/common/PopUp.js","components/auth/Signup.js","components/utils/user.js","components/dashboard/SideNav.js","components/common/Header.js","components/common/Footer.js","components/utils/constants.js","components/Charts/GeoChart.js","components/Charts/NumberRangeChart.js","components/Charts/ComboChart.js","components/Charts/PieChart.js","components/Charts/DateRangeFilterChart.js","components/Charts/TableChart.js","assets/spinner.gif","components/common/Spinner.js","components/dashboard/index.js","components/auth/Login.js","components/auth/ResetPassword.js","components/dashboard/Settings.js","components/dashboard/UserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["FormLayout","className","onSubmit","this","props","autoComplete","formName","children","Component","PopUp","id","onClick","closeModel","msg","Signup","onSignUp","event","preventDefault","state","userName","setState","errorMsg","emailId","password","length","confirmPassword","checkUserExistInDb","userList","JSON","parse","localStorage","getItem","userInDb","forEach","user","index","push","email","role","setItem","stringify","toggleModel","prevState","popUpMsg","showPopupModel","clodeModel","signupSuccess","type","value","target","trim","toLowerCase","to","name","placeholder","onChange","onChangeInput","bind","getUserData","setUserSession","authToken","result","characters","charactersLength","i","charAt","Math","floor","random","makeSessionToken","writeCookie","key","hours","date","Date","setTime","window","document","cookie","toGMTString","isSessionExist","sessionExisit","undefined","cookieList","split","Array","isArray","found","filter","cl","includes","console","log","SidebarExample","showMenu","containerClass","USER","backDropClass","closeNavMenu","style","listStyleType","padding","gotoDashboard","gotoSettings","gotoUserProfile","onLogout","cursor","React","Header","onToggleNavMenu","showNavMenu","mydate","getTime","removeUserSession","logout","location","pathname","dashboard","userProfile","settings","sessionUser","Footer","FAKE_JSON","require","geoChart","numberRangeChart","comboChart","pieChart","dateRangeFilterChart","tableChart","chartLists","updatedChartList","label","checked","compontList","component","width","height","chartType","data","mapsApiKey","rootProps","loader","chartPackages","controls","controlType","options","filterColumnIndex","matchType","ui","title","vAxis","hAxis","seriesType","series","5","is3D","filterColumnLabel","format","pattern","showRowNumber","Spinner","noBg","backdrop","background","src","spinner","alt","Dashboard","renderCharts","charts","userObj","some","item","map","list","createElement","toString","href","showSpinner","setTimeout","backDrop","Login","e","rememberMe","doLogin","userExist","loginSucces","ResetPassword","resetPassword","enteredEmail","resetCode","sentResetCode","showPopUpModel","openPopUpModel","closePopUpModel","enteredCode","margin","left","top","fontSize","marginTop","marginLeft","updatedChartLists","Settings","handleSubmit","openModel","myList","itemIndex","findIndex","graph","chart","handleChange","Profile","App","basename","process","exact","path","Main","UserProfile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d641688.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../styles/main.css\";\r\n\r\nclass FormLayout extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        {\" \"}\r\n        <div className=\" auth-container\">\r\n          <form onSubmit={this.props.onSubmit} autoComplete=\"off\">\r\n            <fieldset>\r\n              <legend>{this.props.formName} </legend>\r\n              {this.props.children}\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormLayout;\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/popup.css\";\r\n\r\nexport default class PopUp extends Component {\r\n  render() {\r\n    return (\r\n      <section id=\"model-container\">\r\n        <div id=\"backdrop\" onClick={this.props.closeModel}></div>\r\n        <div id=\"msg-container\">\r\n          <p>{this.props.msg}</p>\r\n          <div>\r\n            <button id=\"model-close__button\" className=\"submit-button\" onClick={this.props.closeModel}>OK</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport PopUp from \"../common/PopUp\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      emailId: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errorMsg: \"\",\r\n      signupSuccess: false,\r\n      popUpMsg: \"\",\r\n      showPopupModel: false,\r\n    };\r\n  }\r\n\r\n  onChangeInput(type, event) {\r\n    const value = event.target.value.trim().toLowerCase();\r\n    if (type === \"username\") {\r\n      this.setState({ userName: value });\r\n    } else if (type === \"email\") {\r\n      this.setState({ emailId: value });\r\n    } else if (type === \"password\") {\r\n      this.setState({ password: value });\r\n    } else if (type === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: value });\r\n    }\r\n\r\n    if (this.state.errorMsg !== \"\") {\r\n      this.setState({ errorMsg: \"\" });\r\n    }\r\n  }\r\n\r\n  onSignUp = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.userName === \"\") {\r\n      this.setState({ errorMsg: \"Please enter username\" });\r\n    } else if (this.state.emailId === \"\") {\r\n      this.setState({ errorMsg: \"Please enter email Id\" });\r\n    } else if (this.state.password !== \"\" && this.state.password.length < 8) {\r\n      this.setState({\r\n        errorMsg: \"Your password must be atleast minimum 8 characters\",\r\n      });\r\n    } else if (\r\n      this.state.password === \"\" ||\r\n      this.state.confirmPassword === \"\"\r\n    ) {\r\n      this.setState({\r\n        errorMsg: \"Please enter both password and confirm password\",\r\n      });\r\n    } else if (this.state.password !== this.state.confirmPassword) {\r\n      this.setState({ errorMsg: \"Password Not matching\" });\r\n    } else {\r\n      this.checkUserExistInDb();\r\n    }\r\n  };\r\n\r\n  checkUserExistInDb = () => {\r\n    let userList = JSON.parse(localStorage.getItem(\"users\"));\r\n    let userInDb = [];\r\n    userList.forEach((user, index) => {\r\n      if (user.userName === this.state.userName) {\r\n        this.setState({ errorMsg: \"This user name is already registered\" });\r\n        userInDb.push(user);\r\n      } else if (user.emailId === this.state.emailId) {\r\n        this.setState({ errorMsg: \"This emaild id  is registered.\" });\r\n        userInDb.push(user);\r\n      }\r\n    });\r\n    if (userInDb.length === 0) {\r\n      userList.push({\r\n        email: this.state.emailId,\r\n        password: this.state.password,\r\n        role: \"user\",\r\n        userName: this.state.userName,\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(userList));\r\n\r\n      this.toggleModel(true);\r\n    }\r\n  };\r\n\r\n  toggleModel = (redirect = false) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        popUpMsg: \"Account created successfully\",\r\n        showPopupModel: !prevState.showPopupModel,\r\n      };\r\n    });\r\n  };\r\n\r\n  clodeModel = () => {\r\n    this.setState({\r\n      signupSuccess: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { userName, emailId, password, confirmPassword, signupSuccess } =\r\n      this.state;\r\n    if (signupSuccess) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <FormLayout formName=\"Sign Up\" onSubmit={this.onSignUp}>\r\n        {this.state.showPopupModel ? (\r\n          <PopUp msg={this.state.popUpMsg} closeModel={this.clodeModel} />\r\n        ) : null}\r\n\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            placeholder=\"User Name\"\r\n            value={userName}\r\n            onChange={this.onChangeInput.bind(this, \"username\")}\r\n          />\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={emailId}\r\n            onChange={this.onChangeInput.bind(this, \"email\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={this.onChangeInput.bind(this, \"password\")}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={this.onChangeInput.bind(this, \"confirmPassword\")}\r\n          />\r\n        </div>\r\n        {this.state.errorMsg.length > 0 ? (\r\n          <p className=\"auth-error-msg\">{this.state.errorMsg}</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <br />\r\n        <input type=\"submit\" value=\"  Sign Up\" className=\"auth-button\" />\r\n\r\n        <div>\r\n          Already have an account? <Link to=\"/\">Log In</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","export const getUserData = () => {\r\n  return JSON.parse(localStorage.getItem(\"currentUser\")) || {};\r\n};\r\n\r\nexport const makeSessionToken = (length) => {\r\n  var result = \"\";\r\n  var characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const setUserSession = (userName) => {\r\n  const authToken = makeSessionToken(32);\r\n  writeCookie(\"user\", userName, 2);\r\n  userName = authToken + userName;\r\n  writeCookie(\"token\", userName, 2);\r\n};\r\n\r\nexport const writeCookie = (key, value, hours) => {\r\n  var date = new Date();\r\n  // Get milliseconds at current time plus number of hours*60 minutes*60 seconds* 1000 milliseconds\r\n  date.setTime(+date + hours * 3600000); //60 * 60 * 1000\r\n  window.document.cookie =\r\n    key + \"=\" + value + \"; expires=\" + date.toGMTString() + \"; path=/\";\r\n  return value;\r\n};\r\n\r\nexport const isSessionExist = () => {\r\n  let cookie = document.cookie;\r\n  let sessionExisit = false;\r\n  if (cookie !== \"\" && cookie !== undefined && cookie !== null) {\r\n    const cookieList = cookie.split(\";\");\r\n    if (cookieList && Array.isArray(cookieList) && cookieList.length > 0) {\r\n      const token = cookieList.filter((cl) => cl.includes(\"token\"))[0];\r\n      const found = token.split(\"=\")[1];\r\n      if (found !== \"\") {\r\n        console.log(\"##session Token Exisit##\", found.trim());\r\n        sessionExisit = true;\r\n      }\r\n    }\r\n  }\r\n  return sessionExisit;\r\n};\r\n\r\nexport const removeUserSession = () => {\r\n  let cookie = document.cookie;\r\n  var mydate = new Date();\r\n  mydate.setTime(mydate.getTime() - 1);\r\n\r\n  const value = \"\";\r\n  if (cookie !== \"\" && cookie !== undefined && cookie !== null) {\r\n    const cookieList = cookie.split(\";\");\r\n    if (cookieList && Array.isArray(cookieList) && cookieList.length > 0) {\r\n      cookieList.forEach((key, index) => {\r\n        document.cookie =\r\n          key + \"=\" + value + \"; expires=\" + mydate.toGMTString() + \"; path=/\";\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { getUserData } from \"../utils/user\";\r\n\r\nexport default class SidebarExample extends React.Component {\r\n  render() {\r\n    const { showMenu } = this.props;\r\n    const containerClass = showMenu ? \"show-nav-menu\" : \"hide-nav-menu\";\r\n    const USER = getUserData();\r\n\r\n    const backDropClass = showMenu ? \"nav-menu__backdrop\" : \"\";\r\n    return (\r\n      <Router>\r\n        <div id=\"nav-container\" className={containerClass}>\r\n          <div\r\n            className={backDropClass}\r\n            onClick={this.props.closeNavMenu}\r\n          ></div>\r\n          <ul id=\"nav-links\" style={{ listStyleType: \"none\", padding: 0 }}>\r\n            <li>\r\n              <Link to=\"/dashboard\" onClick={this.props.gotoDashboard}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            {USER.role === \"admin\" ? (\r\n              <li>\r\n                <Link to=\"/settings\" onClick={this.props.gotoSettings}>\r\n                  Settings\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <li>\r\n              <Link to=\"/userprofile\" onClick={this.props.gotoUserProfile}>\r\n                Profile\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <hr />\r\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n            <li onClick={this.props.onLogout} style={{cursor: \"pointer\"}} >Logout</li>\r\n          </ul>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SideNav from \"../dashboard/SideNav\";\r\nimport { getUserData } from \"../utils/user\";\r\nimport \"../../styles/header.css\";\r\nimport { isSessionExist, removeUserSession } from \"../utils/user\";\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNavMenu: false,\r\n      logout: false,\r\n      dashboard: false,\r\n      userProfile: false,\r\n      settings: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isSessionExist()) {\r\n      this.onLogout();\r\n    }\r\n  }\r\n  onToggleNavMenu = () => {\r\n    this.setState((prevState) => {\r\n      return { showNavMenu: !prevState.showNavMenu };\r\n    });\r\n  };\r\n\r\n  closeNavMenu = () => {\r\n    if (this.state.showNavMenu) {\r\n      this.setState((prevState) => {\r\n        return { showNavMenu: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  onLogout = () => {\r\n    removeUserSession();\r\n    this.setState({ logout: true });\r\n  };\r\n\r\n  gotoDashboard = () => {\r\n    const currntUrl = window.location.pathname;\r\n    if (currntUrl === \"/dashboard\") {\r\n      return;\r\n    }\r\n    this.setState({ dashboard: true });\r\n  };\r\n\r\n  gotoUserProfile = () => {\r\n    const currntUrl = window.location.pathname;\r\n    if (currntUrl === \"/userprofile\") {\r\n      return;\r\n    }\r\n    this.setState({ userProfile: true });\r\n  };\r\n\r\n  gotoSettings = () => {\r\n    const currntUrl = window.location.pathname;\r\n    if (currntUrl === \"/settings\") {\r\n      return;\r\n    }\r\n    this.setState({ settings: true });\r\n  };\r\n\r\n  render() {\r\n    const { logout, userProfile, settings, dashboard } = this.state;\r\n\r\n    const sessionUser = getUserData();\r\n\r\n    if (logout) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (dashboard) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    if (userProfile) {\r\n      return <Redirect to=\"/userprofile\" />;\r\n    }\r\n\r\n    if (settings) {\r\n      return <Redirect to=\"/settings\" />;\r\n    }\r\n\r\n    return (\r\n      <section>\r\n        <div id=\"header-container\">\r\n          <span id=\"menu-icon\" onClick={this.onToggleNavMenu}>\r\n            {\" \"}\r\n          </span>\r\n          <span id=\"greet-user\"> Welcome {sessionUser.userName || null} </span>\r\n          <span id=\"logout-icon\" onClick={this.onLogout}></span>\r\n        </div>\r\n        <SideNav\r\n          showMenu={this.state.showNavMenu}\r\n          gotoUserProfile={this.gotoUserProfile}\r\n          gotoSettings={this.gotoSettings}\r\n          gotoDashboard={this.gotoDashboard}\r\n          closeNavMenu={this.closeNavMenu}\r\n          onLogout={this.onLogout}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"../../styles/footer.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div id=\"footer-container\">\r\n            All rights reserved \r\n        </div>\r\n    )\r\n}\r\n","import PieChart from \"../Charts/PieChart\";\r\nimport NumberRangeChart from \"../Charts/NumberRangeChart\";\r\nimport GeoChart from \"../Charts/GeoChart\";\r\nimport ComboChart from \"../Charts/ComboChart\";\r\nimport DateRangeFilterChart from \"../Charts/DateRangeFilterChart\";\r\nimport TableChart from \"../Charts/TableChart\";\r\n// import BarChart from \"../Charts/BarChart\";\r\n// import TimeLineChart from \"../Charts/TimeLineChart\";\r\n// import LineChart from \"../Charts/LineChart\";\r\n\r\nconst FAKE_JSON = require(\"../../db/charts.json\");\r\nconst {\r\n  geoChart,\r\n  numberRangeChart,\r\n  comboChart,\r\n  pieChart,\r\n  dateRangeFilterChart,\r\n  tableChart,\r\n} = JSON.parse(JSON.stringify(FAKE_JSON));\r\n\r\nexport const RouterList = [\r\n  {\r\n    path: \"/dashboard\",\r\n    main: () => <h2>User Profile</h2>,\r\n  },\r\n  {\r\n    path: \"/setting\",\r\n    main: () => <h2>Settings</h2>,\r\n  },\r\n];\r\n\r\nexport const chartLists = () => {\r\n  const updatedChartList = JSON.parse(localStorage.getItem(\"chartsList\"));\r\n  if (updatedChartList && updatedChartList.length > 0) {\r\n    return updatedChartList;\r\n  }\r\n\r\n  return [\r\n    {\r\n      name: \"geoChart\",\r\n      label: \"Geo Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"numberRangeChart\",\r\n      label: \"NumberRange Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"comboChart\",\r\n      label: \"Combo Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"pieChart\",\r\n      label: \"Pie Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"dateRangeFilterChart\",\r\n      label: \"DateRange Filter Chart\",\r\n      checked: true,\r\n    },\r\n    {\r\n      name: \"tableChart\",\r\n      label: \"Table Chart\",\r\n      checked: true,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const compontList = {\r\n  geoChart: { component: GeoChart, data: geoChart },\r\n  numberRangeChart: { component: NumberRangeChart, data: numberRangeChart },\r\n  comboChart: { component: ComboChart, data: comboChart },\r\n  pieChart: { component: PieChart, data: pieChart },\r\n  dateRangeFilterChart: {\r\n    component: DateRangeFilterChart,\r\n    data: dateRangeFilterChart,\r\n  },\r\n  tableChart: { component: TableChart, data: tableChart },\r\n};\r\n","import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function GeoChard(props) {\r\n  console.log(\"DATA\",  props)\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"700px\"}\r\n        height={\"300px\"}\r\n        chartType=\"GeoChart\"\r\n        data={props.data}\r\n        // Note: you will need to get a mapsApiKey for your project.\r\n        // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n        mapsApiKey=\"YOUR_KEY_HERE\"\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function NumberRangeChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n       className=\"chart-list\"\r\n       width={\"470px\"}\r\n       height={\"270px\"}\r\n        chartType=\"BarChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        rootProps={{ \"data-testid\": \"6\" }}\r\n        chartPackages={[\"corechart\", \"controls\"]}\r\n        controls={[\r\n          {\r\n            controlType: \"StringFilter\",\r\n            options: {\r\n              filterColumnIndex: 0,\r\n              matchType: \"any\", // 'prefix' | 'exact',\r\n              ui: {\r\n                label: \"Search by name\",\r\n              },\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function ComboChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"650px\"}\r\n        height={\"300px\"}\r\n        chartType=\"ComboChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          title: \"Monthly Coffee Production by Country\",\r\n          vAxis: { title: \"Cups\" },\r\n          hAxis: { title: \"Month\" },\r\n          seriesType: \"bars\",\r\n          series: { 5: { type: \"line\" } },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function PieChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        className=\"chart-list\"\r\n        width={\"500px\"}\r\n        height={\"300px\"}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          title: \"My Daily Activities\",\r\n          // Just add this option\r\n          is3D: true,\r\n        }}\r\n        rootProps={{ \"data-testid\": \"2\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function DateRangeFilterChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"600px\"}\r\n        height={\"400px\"}\r\n        chartType=\"Table\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n        chartPackages={[\"corechart\", \"controls\"]}\r\n        controls={[\r\n          {\r\n            controlType: \"DateRangeFilter\",\r\n            options: {\r\n              filterColumnLabel: \"Year\",\r\n              ui: { format: { pattern: \"yyyy\" } },\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function TableChart(props) {\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={\"100%\"}\r\n        height={\"300px\"}\r\n        chartType=\"Table\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={props.data}\r\n        options={{\r\n          showRowNumber: true,\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner.1baf7e2b.gif\";","import React from \"react\";\r\nimport \"../../styles/common.css\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\n\r\nexport default function Spinner(props) {\r\n  const {backdrop} = props.backdrop || false;\r\n  const noBg = backdrop ? \"\" : \"transparent\";\r\n  return (\r\n    <div id=\"spinner-container\">\r\n      <div id=\"spinner-backdrop\" style={{ background: `${noBg}` }}>\r\n        <div id=\"spinner-section\">\r\n          <img src={spinner} alt=\"spinner\" id=\"spinner-icon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../common/Header\";\r\nimport Footer from \"../common/Footer\";\r\nimport { chartLists, compontList } from \"../utils/constants\";\r\nimport { getUserData } from \"../utils/user\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport \"../../styles/main.css\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSpinner: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ showSpinner: false });\r\n    }, 1000);\r\n  }\r\n  renderCharts = () => {\r\n    const charts = chartLists();\r\n    const userObj = getUserData();\r\n\r\n    const anythingToVisible = charts.some((item) => item.checked === true);\r\n\r\n    if (!anythingToVisible || charts.length === 0) {\r\n      if (\r\n        (userObj !== undefined || userObj !== null) &&\r\n        userObj.role === \"admin\"\r\n      ) {\r\n        return (\r\n          <div id=\"no-chart__msg\">\r\n            <h5>\r\n              {\" \"}\r\n              Goto <Link to=\"/settings\"> Settings </Link> page to update\r\n              visiblity of charts{\" \"}\r\n            </h5>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div id=\"no-chart__msg\">\r\n          <h5>Please contact Admin </h5>\r\n          <p>\r\n            <a href=\"mailto: admin@xyz.com\">admin@xyz.com</a>{\" \"}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return charts.map((list, index) => {\r\n      if (list.checked) {\r\n        return (\r\n          <div className=\"chart-item\" key={index.toString()}>\r\n            {React.createElement(\r\n              compontList[list.name].component,\r\n              compontList[list.name].data\r\n            )}\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        {this.state.showSpinner ? (\r\n          <Spinner backDrop={this.state.showSpinner} />\r\n        ) : (\r\n          <section className=\"chart-container\">{this.renderCharts()}</section>\r\n        )}\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport \"../../styles/login.css\";\r\nimport { setUserSession } from \"../utils/user\";\r\nimport { isSessionExist } from \"../utils/user\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginSucces: false,\r\n      userName: \"\",\r\n      password: \"\",\r\n      errorMsg: \"\",\r\n      rememberMe: false,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    if (isSessionExist()) {\r\n      this.setState({ loginSucces: true });\r\n    }\r\n    const adminData = [\r\n      {\r\n        email: \"admin@gmail.com\",\r\n        role: \"admin\",\r\n        userName: \"admin\",\r\n        password: \"admin\",\r\n      },\r\n    ];\r\n\r\n    var existingUsers =\r\n      JSON.parse(JSON.stringify(localStorage.getItem(\"users\"))) || [];\r\n    if (existingUsers.length === 0) {\r\n      localStorage.setItem(\"users\", JSON.stringify(adminData));\r\n    }\r\n\r\n    this.setState({\r\n      userName: localStorage.getItem(\"rememberUser\"),\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  onChangeInput = (type, e) => {\r\n    if (type === \"userName\") {\r\n      this.setState({ userName: e.target.value, errorMsg: \"\" });\r\n    }\r\n    if (type === \"password\") {\r\n      this.setState({ password: e.target.value, errorMsg: \"\" });\r\n    }\r\n    if (type === \"rememberMe\") {\r\n      this.setState({ rememberMe: e.target.checked });\r\n    }\r\n  };\r\n\r\n  doLogin = (event) => {\r\n    event.preventDefault();\r\n    // Check whether user exists in DB with API or not\r\n    const dbUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n    const userExist = dbUsers.filter((user, index) => {\r\n      if (\r\n        (user.userName === this.state.userName ||\r\n          user.email === this.state.userName) &&\r\n        user.password === this.state.password\r\n      ) {\r\n        return user;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    if (userExist[0]) {\r\n      this.setState({ loginSucces: true });\r\n      setUserSession(this.state.userName);\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(userExist[0]));\r\n      if (this.state.rememberMe) {\r\n        localStorage.setItem(\"rememberUser\", this.state.userName);\r\n      }\r\n    } else {\r\n      this.setState({ errorMsg: \"incorrect credentails\" });\r\n      localStorage.setItem(\"rememberUser\", \"\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userName, password } = this.state;\r\n\r\n    if (this.state.loginSucces) {\r\n      return <Redirect to=\"/dashboard\" push />;\r\n    }\r\n    return (\r\n      <FormLayout formName=\"Login\" onSubmit={this.doLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"üsername\"\r\n          placeholder=\"User Name\"\r\n          value={userName}\r\n          onChange={this.onChangeInput.bind(this, \"userName\")}\r\n        />{\" \"}\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={this.onChangeInput.bind(this, \"password\")}\r\n        />{\" \"}\r\n        {this.state.errorMsg.length > 0 ? (\r\n          <p className=\"auth-error-msg\"> {this.state.errorMsg} </p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.onChangeInput.bind(this, \"rememberMe\")}\r\n          />\r\n          <label>Remember Me</label>\r\n        </div>\r\n        <input type=\"submit\" className=\"auth-button\" value=\"Login\" />\r\n        <div>\r\n          <Link to=\"/resetPassword\">Forgot Password </Link> <br />\r\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport FormLayout from \"../Layout/FormLayout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PopUp from \"../common/PopUp\";\r\nimport \"../../styles/resetCode.css\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emailId: \"\",\r\n      resetCode: \"\",\r\n      errorMsg: \"\",\r\n      sentResetCode: false,\r\n      popUpMsg: \"\",\r\n      showPopUpModel: false,\r\n    };\r\n  }\r\n  onChangeInput(type, e) {\r\n    if (type === \"email\") {\r\n      const enteredEmail = e.target.value.trim().toLowerCase();\r\n      this.setState({ emailId: enteredEmail });\r\n    } else if (type === \"resetCode\") {\r\n      const enteredCode = e.target.value.trim().toLowerCase();\r\n      this.setState({ resetCode: enteredCode });\r\n    }\r\n    if (\r\n      this.state.errorMsg !== \"\" &&\r\n      this.state.errorMsg !== undefined &&\r\n      this.state.errorMsg !== null\r\n    ) {\r\n      this.setState({ resetCode: \"\" });\r\n    }\r\n  }\r\n  resetPassword = (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = this.state.emailId;\r\n    const resetCode = this.state.resetCode;\r\n\r\n    if (\r\n      !this.state.sentResetCode &&\r\n      (enteredEmail === undefined || enteredEmail === \"\")\r\n    ) {\r\n      this.setState({ errorMsg: \"Please enter your email id\" });\r\n      return;\r\n    } else if (!this.state.sentResetCode && enteredEmail !== \"\") {\r\n      this.openPopUpModel();\r\n    } else if (\r\n      this.state.sentResetCode &&\r\n      (resetCode === undefined || resetCode === \"\")\r\n    ) {\r\n      this.setState({ errorMsg: \"Please Enter valid code\" });\r\n    } else if (this.state.sentResetCode && resetCode !== \"\") {\r\n      this.setState({\r\n        showPopUpModel: true,\r\n        popUpMsg: \"Development is under Progress\",\r\n      });\r\n    }\r\n  };\r\n\r\n  openPopUpModel = () => {\r\n    this.setState({\r\n      popUpMsg: \"Sent code Successfully, please check your email inbox\",\r\n      showPopUpModel: true,\r\n    });\r\n  };\r\n\r\n  closePopUpModel = () => {\r\n    this.setState({ popUpMsg: \"\", showPopUpModel: false });\r\n    if (this.state.sentResetCode) {\r\n      this.setState({ sentResetCode: false });\r\n    } else {\r\n      this.setState({ sentResetCode: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      emailId,\r\n      resetCode,\r\n      errorMsg,\r\n      popUpMsg,\r\n      showPopUpModel,\r\n      sentResetCode,\r\n    } = this.state;\r\n    return (\r\n      <FormLayout formName=\"Reset Password\" onSubmit={this.resetPassword}>\r\n        <div id=\"reset-code__container\">\r\n          {showPopUpModel ? (\r\n            <PopUp msg={popUpMsg} closeModel={this.closePopUpModel} />\r\n          ) : null}\r\n        </div>\r\n\r\n        <div>\r\n          {!sentResetCode ? (\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email id\"\r\n              value={emailId}\r\n              onChange={this.onChangeInput.bind(this, \"email\")}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              name=\"resetcode\"\r\n              placeholder=\"Enter Reset Code\"\r\n              value={resetCode}\r\n              onChange={this.onChangeInput.bind(this, \"resetCode\")}\r\n            />\r\n          )}\r\n          <br />\r\n          <p className=\"auth-error-msg\">{errorMsg}</p>\r\n        </div>\r\n        <div>\r\n          {sentResetCode ? (\r\n            <input\r\n              type=\"submit\"\r\n              className=\"auth-button\"\r\n              style={{ margin: \"auto\", left: \"18px\", top: \"5px\" }}\r\n              value=\"Reset Password\"\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"submit\"\r\n              className=\"auth-button\"\r\n              style={{ margin: \"auto\", left: \"18px\", top: \"5px\" }}\r\n              value=\"  Send Reset Code\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ fontSize: \"14px\", marginTop: \"10px\", marginLeft: \"5px\" }}>\r\n          Goto login page <Link to=\"/\">Log In</Link>\r\n        </div>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport \"../../styles/settings.css\";\r\nimport { chartLists } from \"../utils/constants\";\r\nimport PopUp from \"../common/PopUp\";\r\n\r\nvar updatedChartLists = chartLists();\r\n\r\nexport default class Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openModel: false,\r\n      charts: updatedChartLists,\r\n    };\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    localStorage.setItem(\"chartsList\", JSON.stringify(this.state.charts));\r\n    this.toggleModel();\r\n  };\r\n\r\n  toggleModel = () => {\r\n    this.setState((prevState) => {\r\n      return { openModel: !prevState.openModel };\r\n    });\r\n  };\r\n\r\n  handleChange(type, event) {\r\n    var myList = [...this.state.charts];\r\n    const itemIndex = myList.findIndex((graph) => graph.name === type);\r\n\r\n    myList[itemIndex].checked = !myList[itemIndex].checked;\r\n\r\n    this.setState((prevState) => {\r\n      return { graph: myList };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <section id=\"settings-container\">\r\n          <div id=\"settings-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <table>\r\n                {this.state.charts.map((chart, index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>\r\n                        <label>{chart.label}</label>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={chart.checked}\r\n                          name={chart.name}\r\n                          onChange={this.handleChange.bind(this, chart.name)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </table>\r\n\r\n              <input\r\n                className=\"submit-button\"\r\n                id=\"setting-button\"\r\n                type=\"submit\"\r\n                value=\"Update\"\r\n              />\r\n            </form>\r\n          </div>\r\n          {this.state.openModel ? (\r\n            <PopUp msg=\"Updated successfully\" closeModel={this.toggleModel} />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport \"../../styles/profile.css\";\r\nimport { getUserData } from \"../utils/user\";\r\n\r\nexport default function Profile() {\r\n  const USER = getUserData();\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <section id=\"user-profile-main\">\r\n        <div id=\"user-profile-container\">\r\n          <div id=\"user-avator-section\">\r\n            <div id=\"user-avatar\" />\r\n          </div>\r\n          <div id=\"user-details\">\r\n            <div id=\"details\">\r\n              <label>\r\n                {\" \"}\r\n                <b>User Name : </b>\r\n                {USER.userName}\r\n              </label>{\" \"}\r\n              <br />\r\n              <label>\r\n                {\" \"}\r\n                <b>Email Id :</b> {USER.email}\r\n              </label>{\" \"}\r\n              <br />\r\n              <label>\r\n                <b> Your Role: </b>\r\n                {USER.role}\r\n              </label>{\" \"}\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Signup from \"./components/auth/Signup\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Main from \"./components/auth/Login\";\r\nimport ResetPassword from \"./components/auth/ResetPassword\";\r\nimport Settings from \"./components/dashboard/Settings\";\r\nimport UserProfile from \"./components/dashboard/UserProfile\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router  basename={process.env.PUBLIC_URL}>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/resetPassword\" component={ResetPassword} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route path=\"/userprofile\" component={UserProfile} />\r\n          <Route path=\"*\" component={() => <h1>Page not found</h1>} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}